on:
  push:
    branches:
    - release*
    tags:
    - 'v*'

name: release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Run Datalog generators
      run: |
        cargo run --bin treeedbgen-souffle-c -- --output treeedb-c.dl --prefix c
        cargo run --bin treeedbgen-souffle-csharp -- --output treeedb-csharp.dl --prefix csharp
        cargo run --bin treeedbgen-souffle-java -- --output treeedb-java.dl --prefix java
        cargo run --bin treeedbgen-souffle-javascript -- --output treeedb-javascript.dl --prefix js
        cargo run --bin treeedbgen-souffle-rust -- --output treeedb-rust.dl --prefix rs
        cargo run --bin treeedbgen-souffle-souffle -- --output treeedb-souffle.dl --prefix dl
        cargo run --bin treeedbgen-souffle-swift -- --output treeedb-swift.dl --prefix swift

    - name: Deps
      run: |
        sudo apt-get install -y musl-tools
        rustup target add x86_64-unknown-linux-musl

    - name: Build static executables
      run: |
        make static
        mkdir exe/
        cp target/x86_64-unknown-linux-musl/release/treeedb-c exe/
        cp target/x86_64-unknown-linux-musl/release/treeedb-csharp exe/
        cp target/x86_64-unknown-linux-musl/release/treeedb-java exe/
        cp target/x86_64-unknown-linux-musl/release/treeedb-javascript exe/
        cp target/x86_64-unknown-linux-musl/release/treeedb-rust exe/
        cp target/x86_64-unknown-linux-musl/release/treeedb-souffle exe/
        cp target/x86_64-unknown-linux-musl/release/treeedb-swift exe/

    - uses: ncipollo/release-action@v1
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      with:
        artifacts: >
          exe/treeedb-c,
          exe/treeedb-csharp,
          exe/treeedb-java,
          exe/treeedb-javascript,
          exe/treeedb-rust,
          exe/treeedb-souffle,
          exe/treeedb-swift,
          treeedb-c.dl,
          treeedb-csharp.dl,
          treeedb-java.dl,
          treeedb-javascript.dl,
          treeedb-rust.dl,
          treeedb-souffle.dl,
          treeedb-swift.dl,
        artifactErrorsFailBuild: true
        draft: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to crates.io
      env:
        CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        # Only push on actual release tags
        PUSH: ${{ startsWith(github.ref, 'refs/tags/v') }}
      run: |
        if [[ ${PUSH} == true ]]; then
          cargo publish --token ${CRATES_IO_TOKEN} --package treeedb
          cargo publish --token ${CRATES_IO_TOKEN} --package treeedbgen
          cargo publish --token ${CRATES_IO_TOKEN} --package treeedbgen-souffle
          for lang in c csharp java javascript rust souffle swift; do
            cargo publish --token ${CRATES_IO_TOKEN} --package treeedb-${lang}
            cargo publish --token ${CRATES_IO_TOKEN} --package treeedbgen-souffle-${lang}
          done
        else
          cargo publish --dry-run --token ${CRATES_IO_TOKEN} --package treeedb
          cargo publish --dry-run --token ${CRATES_IO_TOKEN} --package treeedbgen-souffle
          for lang in c csharp java javascript rust souffle swift; do
            cargo publish --dry-run --token ${CRATES_IO_TOKEN} --package treeedb-${lang}
            cargo publish --dry-run --token ${CRATES_IO_TOKEN} --package treeedbgen-souffle-${lang}
          done
        fi
